## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function

makeCacheMatrix <- function(x = matrix()) {
## initialize inv as NULL   
  inv <- NULL                             
## define the set function   
  set <- function(y) {                    
## value of matrix in parent environment    
  x <<- y                             
  inv <<- NULL  
}
  
## define the get function  
  get <- function() x                     
## assigns value of inv in parent environment
  setinverse <- function(inverse) inv <<- inverse  
## gets the value of inv where called  
  getinverse <- function() inv                     
  list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)

}

## Write a short comment describing this function
## This function computes the inverse of the special "matrix" returned by makeCacheMatrix above
cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
  inv <- x$getinverse()
  if(!is.null(inv)) {
  message("getting cached data")
  return(inv)
}
  data <- x$get()
  inv <- solve(data, ...)
  x$setinverse(inv)
  inv
}
